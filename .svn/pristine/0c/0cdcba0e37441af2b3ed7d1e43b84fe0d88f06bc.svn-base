<?php 

	class User_model extends CI_Model 
	{
		//===================== LOGGING IN LOGIC=========================/
		function validate_login() 
		{
			$this->db->where('username', $this->input->post('username'));
			$this->db->where('password', md5($this->input->post('password')));
			$this->db->where('activated', 1);
			$query = $this->db->get('user_account_info');

			// one record is returned
			if ($query->num_rows == 1)		
				return true;		
		}

		// return user_email_address, first_name, last_name, height, weight, gender
		function get_user_info($user_id)
		{
			$query_str     = "SELECT email_address FROM user_account_info WHERE user_id = ?";
			$query_r       = $this->db->query($query_str, $user_id);
			$email_address = $this->get_row_value($query_r, 'email_address');
			
			$query_str     = "SELECT admin_right FROM user_account_info WHERE user_id = ?";
			$query_r       = $this->db->query($query_str, $user_id);
			$admin_right   = $this->get_row_value($query_r, 'admin_right');
			
			$query_str     = "SELECT first_name FROM user_personal_info WHERE user_id = ?";
			$query_r       = $this->db->query($query_str, $user_id);
			$first_name    = $this->get_row_value($query_r, 'first_name');			
			$query_str     = "SELECT last_name FROM user_personal_info WHERE user_id = ?";
			$query_r       = $this->db->query($query_str, $user_id);
			$last_name     = $this->get_row_value($query_r, 'last_name');
			
			$query_str     = "SELECT height FROM user_personal_info WHERE user_id = ?";
			$query_r       = $this->db->query($query_str, $user_id);
			$height        = $this->get_row_value($query_r, 'height');
			
			$query_str     = "SELECT weight FROM user_personal_info WHERE user_id = ?";
			$query_r       = $this->db->query($query_str, $user_id);
			$weight        = $this->get_row_value($query_r, 'weight');
			
			$query_str     = "SELECT gender FROM user_personal_info WHERE user_id = ?";
			$query_r       = $this->db->query($query_str, $user_id);
			$gender        = $this->get_row_value($query_r, 'gender');

			$result = array(
					'user_id'		=> $user_id,
					'email_address' => $email_address,
					'admin_right'   => $admin_right,
					'first_name' 	=> $first_name,
					'last_name' 	=> $last_name,
					'height' 		=> $height,
					'weight' 		=> $weight,
					'gender' 		=> $gender
				);

			return $result;
		}

		//===================== REGISTRATION LOGIC=========================/
		// check validation code
		function confirm_registration($registration_code)
		{
			$query = "SELECT user_id FROM user_account_info WHERE activation_code = ?";
			$user_id = $this->db->query($query, $registration_code);
			if ($user_id->num_rows() == 1)
			{
				$query = "UPDATE user_account_info SET activated = 1 WHERE activation_code = ?";
				$this->db->query($query, $registration_code);
				return true;
			}

			return false;
		}

		// add a new unauthenticated user to database
		// only if validation pass
		function register_user($username, $password, $email, $first_name, $last_name, $activation_code, $password_reset_code)
		{
			//1. Insert into user_account_info
			$account_info = array(
					'username'            => $username,
					'password'            => $password,
					'email_address'       => $email,
					'activation_code'     => $activation_code,
					'password_reset_code' => $password_reset_code,
					'activated'           => false,
					'admin_right'         => false
				);		

			$bool1 = $this->db->insert('user_account_info', $account_info);

			//2. Insert into user_personal_info
			$user_id = $this->get_user_id($username);

			$personal_info = array(
					'user_id'			  => $user_id,
					'first_name'          => $first_name,
					'last_name'           => $last_name
				);
			$personal_info['user_id'];
			$bool2 = $this->db->insert('user_personal_info', $personal_info);

			return ($bool1 and true);
		}

		// check if username exists		
		function check_username_exist($usr)
		{
		    $this->db->where('username',$usr);
		    $query=$this->db->get('user_account_info');
		    if($query->num_rows()>0)	    
		        return true;
		    else	    
		        return false;	    
		}

		// check if email exists
		function check_email_exist($eml)
		{
		    $this->db->where('email_address',$eml);
		    $query=$this->db->get('user_account_info');
		    if($query->num_rows()>0)	    
		        return true;	    
		    else
		        return false;	    
		}

		// creat a random string of predefined length
		function _random_string($length)
		{
			$this->load->helper('string');
			$len  = $length;
			$base = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz123456789';
			$max  =strlen($base)-1;
			$activation_code = '';
			mt_srand((double)microtime()*1000000);
			while (strlen($activation_code)<$len+1)
				$activation_code.=$base{mt_rand(0, $max)};
			
			return $activation_code;
		}

		//===================== PASSWORD RESET LOGIC=========================/
		// return password_reset_code
		function get_password_reset_code($email_address)
		{
			$query_str = "SELECT password_reset_code FROM user_account_info WHERE email_address = ?";
			$r = $this->db->query($query_str, $email_address);

			if ($r->num_rows() == 1)
				foreach ($r->result() as $row)
					$pwd = $row->password_reset_code;			
			return $pwd;
		}

		// check password_reset_code against db
		function confirm_reset_password($reset_code)
		{					
			$query = "SELECT user_id FROM user_account_info WHERE password_reset_code = ?";
			$idQuery = $this->db->query($query, $reset_code);
			
			if ($idQuery->num_rows() == 1)
			{
				$user_id = $idQuery->row()->user_id;
				$query = "UPDATE user_account_info SET password_reset_code = ? WHERE user_id = ?";
				$new_reset_code = $this->_random_string(22);
				$data = array('password_reset_code' => $new_reset_code, 'user_id' => $user_id);
				$this->db->query($query, $data);
				return true;
			}

			return false;
		}

		//===================== UPDATE PROFILE LOGIC=========================/		
		function update_account_info($data)
		{			
			if ($data['email_address'] != null)
				$this->update_fields('user_personal_info', 'user_id', $user_id, 'first_name', $data['first_name']);
			if ($data['password'] == $data['confirm_password']
				and $data['password'] != null)
				update_fields('user_account_info', 'user_id', $user_id, 'first_name', $data['first_name']);
		}

		function update_personal_info($data)
		{
			$user_id = $this->session->userdata('user_id');

			if ($data['first_name'] != null)
				if (!$this->update_fields('user_personal_info', 'user_id', $user_id, 'first_name', $data['first_name']))
					return false;
			if ($data['last_name'] != null)
				if (!$this->update_fields('user_personal_info', 'user_id', $user_id, 'last_name', $data['last_name']))
					return false;	
			if ($data['height'] != null)
				if (!$this->update_fields('user_personal_info', 'user_id', $user_id, 'height', $data['height']))
					return false;
			if ($data['weight'] != null)
				if (!$this->update_fields('user_personal_info', 'user_id', $user_id, 'weight', $data['weight']))
					return false;				
			if ($data['dob'] != null)
				if (!$this->update_fields('user_personal_info', 'user_id', $user_id, 'dob', $data['dob']))
					return false;
			if ($data['gender'] != null)
				if (!$this->update_fields('user_personal_info', 'user_id', $user_id, 'gender', $data['gender']))
					return false;
			return true;
		}

		// update a field in a tuple
		function update_fields($table_name, $key, $key_value, $field_name, $field_value)
		{			
			$query_str = 'UPDATE '.$table_name.' SET '.$field_name.' = '."'".$field_value."'".' WHERE '.$key.' = '."'".$key_value."'";
			$update_succesful = $this->db->query($query_str);
			return $update_succesful;
		}

		// return user_id
		function get_user_id($username)
		{
			$query_str = 'SELECT user_id FROM user_account_info WHERE username = ?';
			$result = $this->db->query($query_str, $username);

			if ($result->num_rows == 1)
			{
				$this->get_row_value($result, 'user_id');
				foreach ($result->result() as $row)
					$user_id = $row->user_id;
				return $user_id;
			}
			else
				return -1;			
		}

		// return the value from a query with column name;
		function get_row_value($return_table, $column_name)
		{
			$result ='';
			foreach ($return_table->result() as $row)
				$result = $row->$column_name;
			return $result;
		}

		function get_field_value($table, $field_return, $field_compare, $field_value)
		{
			$query_str = 'SELECT '.$field_return.' FROM '.$table.' WHERE '.$field_compare.' = '.$field_value;
			$query_result = $this->db->query($query_str);
			if ($query_result->num_rows == 1)
			{
				foreach ($query_result->result() as $row)
					return $row->$field_return;
			}
		}
	}
?>