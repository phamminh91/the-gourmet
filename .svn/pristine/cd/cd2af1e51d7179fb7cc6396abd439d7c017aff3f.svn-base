<?php 

	class User_model extends CI_Model 
	{
		//===================== LOGGING IN LOGIC=========================/
		function validate_login() 
		{
			$this->db->where('username', $this->input->post('username'));
			$this->db->where('password', md5($this->input->post('password')));
			$query = $this->db->get('membership');

			// one record is returned
			if ($query->num_rows == 1)		
				return true;		
		}

		//===================== REGISTRATION LOGIC=========================/
		function confirm_registration($registration_code)
		{
			$query = "SELECT id FROM membership WHERE activation_code = ?";
			$id = $this->db->query($query, $registration_code);
			if ($id->num_rows() == 1)
			{
				$query = "UPDATE membership SET activated = 1 WHERE activation_code = ?";
				$this->db->query($query, $registration_code);
				return true;
			}

			return false;
		}

		// add a new unauthenticated user to database
		// only if validation pass
		function register_user($username, $password, $email, $first_name, $last_name, $activation_code, $password_reset_code)
		{
			$new_member_data = array(
					'username'            => $username,
					'password'            => md5($password),
					'first_name'          => $first_name,
					'last_name'           => $last_name,
					'email_address'       => $email,
					'activation_code'     => $activation_code,
					'password_reset_code' => $password_reset_code,
					'activated'           => false
				);

			// a boolean
			$insert = $this->db->insert('membership', $new_member_data);
			return $insert;
		}

		function check_username_exist($usr)
		{
		    $this->db->where('username',$usr);
		    $query=$this->db->get('membership');
		    if($query->num_rows()>0)	    
		        return true;
		    else	    
		        return false;	    
		}

		function check_email_exist($eml)
		{
		    $this->db->where('email_address',$eml);
		    $query=$this->db->get('membership');
		    if($query->num_rows()>0)	    
		        return true;	    
		    else
		        return false;	    
		}

		function _random_string($length)
		{
			$this->load->helper('string');
			$len  = $length;
			$base = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz123456789';
			$max  =strlen($base)-1;
			$activation_code = '';
			mt_srand((double)microtime()*1000000);
			while (strlen($activation_code)<$len+1)
				$activation_code.=$base{mt_rand(0, $max)};
			
			return $activation_code;
		}

		//===================== PASSWORD RESET LOGIC=========================/
		function get_password_reset_code($email_address)
		{
			$query_str = "SELECT password_reset_code FROM membership WHERE email_address = ?";
			$pwd = $this->db->query($query_str, $email_address);

			if ($query->num_rows() == 1)
				$pwd = $query->row()->body;

			return $pwd;
		}

		function confirm_reset_password($reset_code)
		{		
			$new_reset_code = $this->_random_string(22);
			$query = "SELECT id FROM membership WHERE password_reset_code = ?";
			$id = $this->db->query($query, $reset_code);
			if ($id->num_rows() == 1)
			{
				$query = "UPDATE membership SET password_reset_code = ? WHERE id = ?";
				$data = array('password_reset_code' => $reset_code, 'id' => $id);
				$this->db->query($query, $reset_code);
				return true;
			}

			return false;
		}
	}
?>