<?php
	class User extends CI_Controller {

		function index() {
			$data['main_content'] = "sign_in";
			$this->load->view('templates/template', $data);
		}

		//=====================LOG IN FUNCTION===========================/
		function sign_in()
		{
			$data['page_title'] = 'Sign In';			
			$data['main_content'] = "sign_in";
			$this->load->view('templates/template', $data);
		}

		function validate_login($current_uri) 
		{
			$this->load->model('user_model');
			$q = $this->user_model->validate_login();			
			if ($q)
			{
				$data = array(
					'user'           => $this->user_model->get_user($this->input->post('username'))->row(),					
					'is_logged_in'   => TRUE
					);

				// Store user info in $_SESSION
				$this->session->set_userdata($data);
			
				$data['main_content'] = 'member_area'; // redirect the browser to the page that request this function
				$this->load->view('templates/template', $data);
			}
			else
			{								
				$data['id_pwd_not_matched'] = TRUE;				
				$data['main_content'] = 'sign_in';
				$this->load->view('templates/template', $data);
			}
		}

		//=====================LOGGING OUT FUNCTION===========================/
		function log_out()
		{			
			$this->session->unset_userdata('is_logged_in');
			$this->session->unset_userdata('user');
        	$data['page_title'] = 'Logged Out';        
	        $this->session->sess_destroy();
	        $this->index();
		}

		//=====================SIGN UP FUNCTION===========================/
		function sign_up() 
		{
			$data['page_title'] = 'Sign Up';
			$data['main_content'] = 'sign_up';
			$this->load->view('templates/template', $data);
		}

		function add_user() 
		{
			$this->load->model('user_model');
			$this->session->set_userdata('userNameExist', FALSE);
			$this->session->set_userdata('emailExist', FALSE);

			// username exists - display an error message
			if ($q = $this->user_model->check_username_exist($this->input->post('username')))
			{										
				$data['main_content'] = 'sign_up';
				$this->session->set_userdata('userNameExist', TRUE);
				$this->load->view('templates/template', $data);
				return;
			}

			// email exists - display an error message
			if ($q = $this->user_model->check_email_exist($this->input->post('email_address')))
			{										
				$data['main_content'] = 'sign_up';
				$this->session->set_userdata('emailExist', TRUE);
				$this->load->view('templates/template', $data);
				return;
			}

			// create new member				 
			$username            = $this->input->post('username');
			$email_address       = $this->input->post('email_address');
			$first_name          = $this->input->post('first_name');
			$last_name           = $this->input->post('last_name');
			$password            = md5($this->input->post('password'));
			$activation_code     = $this->user_model->_random_string(22);
			$password_reset_code = $this->user_model->_random_string(22);

			// send activation email
			$this->send_activation_email($email_address, $activation_code);
			if($this->user_model->register_user($username, $password, $email_address, $first_name, $last_name, $activation_code, $password_reset_code))
			{
				// save user data for current session
				$data = array(
						'username' => $username,
						$email_address, $first_name, $password
					);

				$this->session->set_userdata($data);
				$data['main_content'] = 'sign_up_successful';
				$this->load->view('templates/template', $data);					
			}
			else
			{			
				// registration not successful - reload the page
				$this->load->view('sign_up');
			}	
		}

		//=====================ACCOUNT ACTIVATION=========================/
		function activation_confirm()
		{
			$registration_code = $this->uri->segment(3);

			if ($registration_code == '')
			{
				echo 'Error no registration code in URL';
				exit();
			}

			$this->load->model('user_model');
			$q = $this->user_model->confirm_registration($registration_code);
			if ($q)
			{
				$data['page_title'] = 'Thank You For Registering';
				$data['main_content'] = 'account_activated';
				$this->load->view('templates/template', $data);
			}

			// WHEN INVALID ACTIVATION LINK
		}

		function send_activation_email($email_address, $activation_code)
		{
			//send activation emails			
			$this->email->from('phamminh91@gmail.com', 'The Gourmet');
			$this->email->to($email_address);
			$this->email->subject('Registration Confirmation');
			$this->email->message('Please click this link to confirm your registration' 
								. anchor('/user/activation_confirm/' . $activation_code, 'Confirm Registration'));
			$this->email->send();
		}

		//===================== PASSWORD RESET =========================/
		function forgot_password()
		{
			$data['page_title'] = 'Reset Password';
			$data['main_content'] = 'forgot_password';
			$this->load->view('templates/template', $data);
		}

		function send_password_reset_code()
		{					
			$email_address = $this->input->post('email_address');

			$this->load->model('user_model');
			$pwd_code = $this->user_model->get_password_reset_code($email_address);			   
			if ($pwd_code != null)
			{
				$this->email->from('phamminh91@gmail.com', 'The Gourmet');
				$this->email->to($email_address);
				$this->email->subject('Password Reset Confirmation');
				
				$this->email->message('Please click this link to reset your password' 
								. anchor('/user/reset_password/' . $pwd_code, "<br /> Reset Password."));
				$this->email->send();
			}
			else
				$this->forgot_password();
		}

		function reset_password()
		{
			$reset_code = $this->uri->segment(3);

			if ($reset_code == '')
			{
				echo 'Error no reset code in URL';
				exit();
			}

			$this->load->model('user_model');

			$q = $this->user_model->confirm_reset_password($reset_code);
			if ($q)
			{
				$data['page_title'] = 'Password Reset Succesfully';
				$data['main_content'] = 'reset_successful';
				$this->load->view('templates/template', $data);
			}
		}

		//===================== UPDATE PROFILE =========================/
		function edit_profile()		
		{			
			if ($this->session->userdata('is_logged_in'))
			{
				// load view
				$data['page_title'] = 'Profile';
				$data['main_content'] = 'edit_profile_2';
				$this->load->view('templates/template', $data);
			}
		}

		function edit_profile_password()
		{
			if ($this->session->userdata('is_logged_in'))
			{
				$data['main_content'] = 'edit_profile_info';
				$this->load->view('templates/template', $data);
			}
		}

		function update_personal_info()
		{
			$this->load->model('user_model');

			// read input update data			
			$first_name = $this->input->post('first_name');
			$last_name  = $this->input->post('last_name');
			$height     = (int)$this->input->post('height');
			$weight     = (int)$this->input->post('weight');
			$dob        = $this->input->post('dob');
			$gender     = $this->input->post('gender');

			$data = array (
					'first_name' => $first_name,
					'last_name'  => $last_name,
					'height'     => $height,
					'weight'     => $weight,
					'dob'        => $dob,
					'gender'     => $gender
				);

			$q = $this->user_model->update_personal_info($data);
			if($q)
			{
				echo "Profile updated succesfully";
			}
			else
			{
				echo "Error updating profile";
			}
		}

		//===================== UPLOAD RECIPE =========================/
		function upload_recipe()
		{
			if ($this->session->userdata('is_logged_in'))
			{
				$data['page_title'] = 'Upload Recipe';
				$data['main_content'] = 'upload_recipe';
				$this->load->view('templates/template', $data);
			}
			else
			{
				$data['main_content'] = 'forgot_password';
				$data['main_content'] = 'sign_in';
				$this->load->view('templates/template', $data);
			}
		}

		function create_recipe() 
		{
			$this->load->model('recipe_model');
			
			if($query=$this->recipe_model->create_recipe()) {
				echo "Recipe submitted successful";
			} else {
				$this->upload_recipe();
			}
		}
	}
?>