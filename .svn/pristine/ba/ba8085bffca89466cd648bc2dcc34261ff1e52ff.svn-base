<?php 
class Recipe_model extends CI_Model 
{
	var $gallery_path;
	var $gallery_path_thumb;
	var $gallery_path_url;

	function __construct() 
	{
		parent::__construct();
		$this->gallery_path = realpath(APPPATH . '../media/recipe_imgs/');
		$this->gallery_path_url = base_url().'media/recipe_imgs/';
	}

	//===================== CREATE A NEW RECIPE ========================/
	function create_recipe() 
	{
		$new_recipe = array(
			'recipe_name' => $this->input->post('recipe_name'),
			'description' => $this->input->post('rec_desc'),
			'meal_time'   => $this->input->post('meal_time'),
			'ingredients' => $this->input->post('ingredients'),
			'steps'       => $this->input->post('steps'),
			'calories'    => $this->cal_calories($this->input->post('ingredients')),
			);			

		$insert = $this->db->insert('recipes',$new_recipe);			
		$cur_id = $this->db->insert_id();
		$this->upload_image($cur_id);

		// insert into upload table
		$upload_data = array(
			'user_id' => $this->session->userdata('user_id'),
			'recipe_id' => $cur_id,
			'time_uploaded' => $this->get_current_time(),
			);
		$this->db->insert('uploaded', $upload_data);

		return $insert;
	}


	function get_recipe_id($recipe_name) {
		$query_str = 'SELECT recipe_id FROM recipes WHERE recipe_name = ?';
		$result = $this->db->query($query_str, $recipe_name);

		if ($result->num_rows == 1)			
		{
			
			foreach ($result->result() as $row)
				$recipe_id = $row->recipe_id;
			return $recipe_id;
		}		
	}

	function upload_image($recipe_id) {

		// upload images
		$config = array(
			'allowed_types' => 'jpg|jpeg|gif|png|bmp',
			'upload_path'   => $this->gallery_path,
			'file_name'     => $recipe_id,
			'max_size'      => 3000
			);
		
		$this->load->library('upload', $config);
		$q = $this->upload->do_upload(); 				// do upload
		
		$image_data = $this->upload->data(); 		//get image data
		
		// create a thumbnail
		$config = array(
			'source_image'    => $image_data['full_path'],
			'new_image'       => $this->gallery_path . '/thumbs',
			'maintain_ration' => true,
			'width'           => 500,
			'height'          => 313,
			);
		
		$this->load->library('image_lib', $config);
		$this->image_lib->resize();
	}


	function get_images($id) 
	{
		
		$files = scandir($this->gallery_path);
		
		$files = array_diff($files, array('.', '..', 'thumbs'));
		
		$images = array();
		
		foreach ($files as $file) {
			$images []= array (
				'url' => $this->gallery_path_url . $file,
				'thumb_url' => $this->gallery_path_url . 'thumbs/' . $file
				);
		}
		
		return $images;
	}

	// return a timestamp YYYY-MM-DD HH:MM:SS
	function get_current_time() 
	{
		$this->load->helper('date');
		$datestring = "%Y-%m-%d %h:%m:%s";
		$timezone = 'UP8';
		$upload_time = mdate($datestring, gmt_to_local(time(), $timezone, FALSE));

		return $upload_time;
	}

	//======================= GET NUTRITIENTS INFO ==========================/
	function cal_calories($ingredients)
	{
		$ingred_list = explode('<br>',$ingredients);
		$total_cal = 0;
		foreach($ingred_list as $string)
		{
			$quantity = floatval($string);//get quantitiy 
			//(won't work if format is in calculation, e.g 2*300)
			$substring = substr($string,strlen($quantity));
			//get the rest of the string;
			$element = explode(" ",$substring);
			if($element[0]==null)
				$i=1;
			else
				$i=0;
			$unit = $element[$i];//get unit
			unset($element[$i]);
			if($element[$i+1]=='of')
				unset($element[$i+1]);
			$ingred = substr(implode("%",$element),$i+0).'%';
			$temp_cal = $this->get_ingredient($quantity,$unit,$ingred);
			$total_cal += $temp_cal;
		}
		return $total_cal;
	}
	
	private function get_ingredient($get_quantity,$get_unit,$get_ingred)
	{
		$standard_unit = $this->convert_unit($get_unit);
		$query = 'SELECT numcalories FROM calories WHERE ingred LIKE ?';
		$ingred_num = $this->db->query($query,$get_ingred);
		if($ingred_num->num_rows == 1)
		{
			$row =$ingred_num->row();
			$ingred_cal = $get_quantity*$standard_unit*$row->numcalories;
			return $ingred_cal;
		}
		else if($ingred_num->num_rows >1)
		{
			$ingred_cal_total=0;
			foreach($ingred_num->result() as $row)
				$ingred_cal_total += $row->numcalories;
			$ingred_cal=$ingred_cal_total/$ingred_num->num_rows;
			return $ingred_cal;
		}
		return 0;
	}

	//1/2 TEASPOON
	private function convert_unit($raw_unit)
	{		
		switch($raw_unit)
		{
			case "ounce": 
			case "ounces":
			case "oz":
			return 1;
			case "g": 
			case "grams": 
			case "gram": 
			case "ml":
			return 0.035;
			case "kg": 
			case "kgs": 
			case "l":
			case "litre":
			return 35;
			case "tablespoon": 
			return 0.5;
			case "cup": 
			return 8;
			case "teaspoon": 
			case "teaspoons": 
			case "tsp": 
			return 0.17;
			default:
			return 1;			
		}		
	}

	//======================= SEARCH FOR A RECIPE ==========================/	
	function dyn_search()
	{
		$partialStates = $_POST['partialState'];

		$config['total_rows']     = $this->db->get('recipes')->num_rows();
		$config['per_page']       = 9;
		$config['num_links']      = 5;
		$config['base_url']       = 'http://localhost/index.php/home/search_recipe';
		$config['full_tag_open']  = '<div class="pagination-link">';
		$config['full_tag_close'] = '</div>';
		$this->pagination->initialize($config);	

		$query_str = 'SELECT *
		FROM recipes
		WHERE Match(recipe_name, description, ingredients, steps) Against (? IN BOOLEAN MODE)';
		$data['records'] =  $this->db->query($query_str, $search_str);
		$data['cur_search_str']	= $search_str;

		{
			if($records->num_rows == 0)
				echo "<div style='width:100%; text-align:center; font-size:1.3em; margin-top:200px'>Sorry, there is no recipe that matches your search..</div>";
			else
			{
				// loop through the result table
				foreach($data['records']->result() as $row)
				{			

					$img_url = base_url()."style/img/rec1.jpg";
					$recipe_description = $row->description;
					$recipe_name = $title_name = $row->recipe_name;
					$num_of_likes = $row->num_of_likes;

					if (strlen($recipe_description) > 100)
					{					
						$recipe_description = substr($recipe_description, 0, 100)."...";
					}
					if (strlen($recipe_name) > 30)
					{
						$recipe_name = substr($recipe_name, 0, 29)."...";
					}				
					echo "<a href='/index.php/home/view_recipe/1' title=\"".$title_name."\">";
					echo "<div class='collage'>";
					echo "<img src='".$img_url."' alt='' width='200' height='140'>";
					echo "<div class='collage-text'>";
					echo "<div class='collage-title'>".$recipe_name."</div>";
					echo "<div class='rating'>Likes: ".$num_of_likes."</div>";
					echo "<div class='collage-description'>".$recipe_description."</div>";
					echo "</div>";							
					echo "</div>";
					echo "</a>";
				}
				echo $this->pagination->create_links(); 
			}
		}
	}

	function search_recipe()
	{						
		$this->init_pagination();			

		$query_str = 'SELECT *
		FROM recipes
		WHERE Match(recipe_name, description, ingredients, steps) Against (? IN BOOLEAN MODE)';	
	}

	function meal_time($q)
	{
		$q_int = 0;
		if ($q=="lunch") $q_int = 1;
		else if ($q=="dinner") $q_int = 2;

		$this->init_pagination();
		$query_str = 'SELECT * 
					  FROM recipes
					  WHERE meal_time = ?
					  ORDER BY num_of_likes DESC';
		$query_r   = $this->db->query($query_str, $q_int);
		return $query_r;
	}
}

?>